# 初始化现代工具
eval "$(starship init zsh)"
eval "$(direnv hook zsh)"
eval "$(mise activate zsh)"

# ============================================================================
# 自动补全配置
# ============================================================================

# 加载专业的补全配置
if [[ -f ~/.config/zsh/completions.zsh ]]; then
    source ~/.config/zsh/completions.zsh
else
    # 基础补全配置（fallback）
    autoload -Uz compinit
    compinit -u
    
    # 基本补全样式
    zstyle ':completion:*' menu select
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
    zstyle ':completion:*' list-colors '${(s.:.)LS_COLORS}'
    
    # 基本选项
    setopt AUTO_MENU
    setopt COMPLETE_IN_WORD
    setopt ALWAYS_TO_END
fi

# 历史命令智能搜索
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search  # 上箭头
bindkey "^[[B" down-line-or-beginning-search  # 下箭头

# ============================================================================
# Zsh 增强插件
# ============================================================================

# 启用 zsh-autosuggestions（自动建议）
if [ -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    # 自动建议配置
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
    ZSH_AUTOSUGGEST_STRATEGY=(history completion)
    ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
    # 快捷键：Ctrl+Space 接受建议
    bindkey '^ ' autosuggest-accept
fi

# 启用 zsh-syntax-highlighting（语法高亮）
if [ -f /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    # 语法高亮配置
    ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
    ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'
    ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
    ZSH_HIGHLIGHT_STYLES[builtin]='fg=yellow,bold'
    ZSH_HIGHLIGHT_STYLES[function]='fg=blue,bold'
    ZSH_HIGHLIGHT_STYLES[command-substitution]='fg=magenta'
    ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
    ZSH_HIGHLIGHT_STYLES[globbing]='fg=yellow'
fi

# 启用额外的 zsh-completions（但不重复初始化 compinit）
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
    # 注意：不再重复调用 compinit，因为已经在上面或 completions.zsh 中调用过了
fi

# 现代CLI工具别名（渐进增强）
command -v rg >/dev/null && alias grep='rg' || alias grep='grep --color=auto'
command -v fd >/dev/null && alias find='fd'
command -v bat >/dev/null && alias cat='bat --style=plain'
command -v eza >/dev/null && alias ls='eza --icons' || alias ls='ls --color=auto'
command -v dust >/dev/null && alias du='dust'
command -v btm >/dev/null && alias top='btm'
command -v procs >/dev/null && alias ps='procs'

# 编辑器智能切换
alias trae='open -a Trae'
function code() {
    if [[ "$1" == "--ai" ]]; then
        trae "${2:-.}"
    else
        zed "${1:-.}"
    fi
}

# 容器和K8s别名
alias d='docker'
alias dc='docker-compose'
alias dps='docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"'
alias k='kubectl'
alias kgp='kubectl get pods'
alias kgs='kubectl get svc'
alias kgd='kubectl get deployment'
alias kge='kubectl get events --sort-by=.metadata.creationTimestamp'

# Git工作流别名
alias gs='git status'
alias gl='git log --oneline --graph'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gpl='git pull'
alias gco='git checkout'

# 数据库别名
alias mysql='mysql -u root -p'
alias redis-cli='redis-cli'
if command -v clickhouse-client >/dev/null; then
    alias ch='clickhouse-client'
elif [ -d "/Applications/ClickHouse.app" ]; then
    alias ch='open -a ClickHouse'
    alias clickhouse='open -a ClickHouse'
fi

# AI工具别名
alias ai='aichat'
alias chat='ollama run phi3:mini'
alias code-review='aichat "请帮我审查这段代码"'

# 系统监控别名
alias monitor='btm'
alias usage='dust'
alias processes='procs'

# 环境变量
export EDITOR="zed"
export VISUAL="zed"
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# 历史记录优化
HISTSIZE=10000
SAVHIST=10000
setopt HIST_IGNORE_DUPS
setopt SHARE_HISTORY
setopt APPEND_HISTORY